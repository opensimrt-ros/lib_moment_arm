#include "lib_moment_arm/MomentArm.h"

using namespace SimTK;
using namespace std;

#if __GNUG__

vector<string> getModelCoordinateSymbolicOrder(){
    return vector<string>{
        "pelvis_tilt",
	"pelvis_list",
	"pelvis_rotation",
        "pelvis_tx",
	"pelvis_ty",
	"pelvis_tz",
        "hip_flexion_r",
	"hip_adduction_r",
	"hip_rotation_r",
        "hip_flexion_l",
	"hip_adduction_l",
	"hip_rotation_l",
        "lumbar_extension",
	"lumbar_bending",
	"lumbar_rotation",
        "knee_angle_r",
	"knee_angle_l",
	"ankle_angle_r",
        "ankle_angle_l"};
}

vector<string> getModelMuscleSymbolicOrder(){
    return vector<string>{
	"med_gas_r",
        "lat_gas_r",
	"soleus_r",
	"tib_ant_r",
	"med_gas_l",
	"lat_gas_l",
        "soleus_l",
        "tib_ant_l"};
}

#endif

Matrix calcMomentArm(const Vector& q) {
    Matrix R(19, 8, 0.0);
    R[17][0] = 5.4238462301625873e-5*pow(q[15], 5) + 0.00031316165072149519*pow(q[15], 4)*q[17] + 0.00025706552161415574*pow(q[15], 4) + 3.6727322614476545e-5*pow(q[15], 3)*pow(q[17], 2) + 0.0012378153372693264*pow(q[15], 3)*q[17] + 0.0003306787058510556*pow(q[15], 3) - 1.1756740263811122e-5*pow(q[15], 2)*pow(q[17], 3) + 7.0886357440363805e-5*pow(q[15], 2)*pow(q[17], 2) + 0.0015456625721145185*pow(q[15], 2)*q[17] + 7.5980728344164834e-5*pow(q[15], 2) - 4.6186754908861586e-5*q[15]*pow(q[17], 4) + 7.355316519215949e-5*q[15]*pow(q[17], 3) + 0.00022016543093351826*q[15]*pow(q[17], 2) + 9.5553935648984124e-5*q[15]*q[17] - 0.00017116612634918583*q[15] + 0.0004806906735589111*pow(q[17], 5) - 0.0012556170908657835*pow(q[17], 4) - 0.0047513091185359168*pow(q[17], 3) + 0.023439843666512489*pow(q[17], 2) + 0.014223050818433293*q[17] - 0.051241757470437813;
    R[17][1] = 1.4613743869497375e-6*pow(q[15], 5) + 0.00010709503364609979*pow(q[15], 4)*q[17] + 3.5043854414346575e-5*pow(q[15], 4) + 6.3582193003457687e-6*pow(q[15], 3)*pow(q[17], 2) + 0.0004317780511990712*pow(q[15], 3)*q[17] + 0.00011990788323016109*pow(q[15], 3) - 2.6910951550732145e-5*pow(q[15], 2)*pow(q[17], 3) - 4.7704464702544162e-5*pow(q[15], 2)*pow(q[17], 2) + 0.00081404149413071599*pow(q[15], 2)*q[17] + 0.00023368400671419832*pow(q[15], 2) - 6.3503754607769248e-5*q[15]*pow(q[17], 4) + 7.1307630003666911e-5*q[15]*pow(q[17], 3) + 0.00019901020866667677*q[15]*pow(q[17], 2) + 2.8717745033245332e-6*q[15]*q[17] - 2.6535501222893759e-5*q[15] + 0.00049112253786734569*pow(q[17], 5) - 0.0012224986575703927*pow(q[17], 4) - 0.0050329137968562129*pow(q[17], 3) + 0.023756049069784985*pow(q[17], 2) + 0.015655776646127217*q[17] - 0.052406552035827988;
    R[17][2] = 0.00046162811066194267*pow(q[17], 5) - 0.00049110163500667645*pow(q[17], 4) - 0.0060019573122609476*pow(q[17], 3) + 0.020378369335041547*pow(q[17], 2) + 0.0202526422668848*q[17] - 0.049704201308833476;
    R[17][3] = 0.0021891957630539552*pow(q[17], 5) - 0.0017101807729658809*pow(q[17], 4) - 0.015912088569956771*pow(q[17], 3) - 0.017215445522551914*pow(q[17], 2) + 0.014286541223685721*q[17] + 0.041928146309808144;
    R[18][4] = 5.4238462301625873e-5*pow(q[16], 5) + 0.00031316165072149519*pow(q[16], 4)*q[18] + 0.00025706552161415574*pow(q[16], 4) + 3.6727322614476545e-5*pow(q[16], 3)*pow(q[18], 2) + 0.0012378153372693264*pow(q[16], 3)*q[18] + 0.0003306787058510556*pow(q[16], 3) - 1.1756740263811122e-5*pow(q[16], 2)*pow(q[18], 3) + 7.0886357440363805e-5*pow(q[16], 2)*pow(q[18], 2) + 0.0015456625721145185*pow(q[16], 2)*q[18] + 7.5980728344164834e-5*pow(q[16], 2) - 4.6186754908861586e-5*q[16]*pow(q[18], 4) + 7.355316519215949e-5*q[16]*pow(q[18], 3) + 0.00022016543093351826*q[16]*pow(q[18], 2) + 9.5553935648984124e-5*q[16]*q[18] - 0.00017116612634918583*q[16] + 0.0004806906735589111*pow(q[18], 5) - 0.0012556170908657835*pow(q[18], 4) - 0.0047513091185359168*pow(q[18], 3) + 0.023439843666512489*pow(q[18], 2) + 0.014223050818433293*q[18] - 0.051241757470437813;
    R[18][5] = 1.4613743869497375e-6*pow(q[16], 5) + 0.00010709503364609979*pow(q[16], 4)*q[18] + 3.5043854414346575e-5*pow(q[16], 4) + 6.3582193003457687e-6*pow(q[16], 3)*pow(q[18], 2) + 0.0004317780511990712*pow(q[16], 3)*q[18] + 0.00011990788323016109*pow(q[16], 3) - 2.6910951550732145e-5*pow(q[16], 2)*pow(q[18], 3) - 4.7704464702544162e-5*pow(q[16], 2)*pow(q[18], 2) + 0.00081404149413071599*pow(q[16], 2)*q[18] + 0.00023368400671419832*pow(q[16], 2) - 6.3503754607769248e-5*q[16]*pow(q[18], 4) + 7.1307630003666911e-5*q[16]*pow(q[18], 3) + 0.00019901020866667677*q[16]*pow(q[18], 2) + 2.8717745033245332e-6*q[16]*q[18] - 2.6535501222893759e-5*q[16] + 0.00049112253786734569*pow(q[18], 5) - 0.0012224986575703927*pow(q[18], 4) - 0.0050329137968562129*pow(q[18], 3) + 0.023756049069784985*pow(q[18], 2) + 0.015655776646127217*q[18] - 0.052406552035827988;
    R[18][6] = 0.00046162811066194267*pow(q[18], 5) - 0.00049110163500667645*pow(q[18], 4) - 0.0060019573122609476*pow(q[18], 3) + 0.020378369335041547*pow(q[18], 2) + 0.0202526422668848*q[18] - 0.049704201308833476;
    R[18][7] = 0.0021891957630539552*pow(q[18], 5) - 0.0017101807729658809*pow(q[18], 4) - 0.015912088569956771*pow(q[18], 3) - 0.017215445522551914*pow(q[18], 2) + 0.014286541223685721*q[18] + 0.041928146309808144;
    return R;
}
